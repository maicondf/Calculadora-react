{"version":3,"sources":["components/Button.jsx","components/Display.jsx","main/Calculator.jsx","reportWebVitals.js","index.js"],"names":["props","classes","operation","double","triple","onClick","e","click","label","className","value","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","parseFloat","toFixed","toString","n","includes","i","newValue","console","log","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e67e1cae.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props => {\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation' : ''\r\n    classes += props.double ? 'double' : ''\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return (\r\n        <button \r\n            onClick={e => props.click && props.click(props.label)}\r\n            className={classes}>\r\n            {props.label}\r\n        </button>\r\n    )\r\n}","import React from 'react'\r\nimport './Display.css'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default props =>\r\n    <div className=\"display\">{props.value}</div>","import React, { Component } from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0 //valor atual do array values[], qual o indice.\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n    \r\n    state = { ...initialState }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.clearMemory = this.clearMemory.bind(this)\r\n        this.setOperation = this.setOperation.bind(this)\r\n        this.addDigit = this.addDigit.bind(this)\r\n        \r\n    }\r\n    clearMemory() {\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n    setOperation(operation) {\r\n        if (this.state.current === 0) {\r\n            this.setState({ operation, current: 1, clearDisplay: true })\r\n        } else {\r\n            const equals = operation === '='\r\n            const currentOperation = this.state.operation\r\n\r\n            const values = [...this.state.values]\r\n            \r\n            switch (currentOperation) {\r\n                case \"/\":\r\n                    values[0] /= values[1];\r\n                    values[0] = parseFloat(values[0].toFixed(3))\r\n                    break;\r\n                case \"*\":\r\n                    values[0] *= values[1];\r\n                    break;\r\n                case \"+\":\r\n                    values[0] += values[1];\r\n                    break;\r\n                case \"-\":\r\n                    values[0] -= values[1];\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            values[1] = 0\r\n\r\n            this.setState({\r\n                displayValue: values[0].toString(),\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1, \r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n) {\r\n        if (n === '.' && this.state.displayValue.includes('.')) {\r\n            return\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n            || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        const displayValue = currentValue + n\r\n        this.setState({ displayValue, clearDisplay: false })\r\n\r\n        if (n !== '.') {\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({ values })\r\n            console.log(values);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue}/>\r\n                <Button label=\"AC\" click={this.clearMemory} triple/>\r\n                <Button label=\"/\" click={this.setOperation} operation/>\r\n                <Button label=\"7\" click={this.addDigit} />\r\n                <Button label=\"8\" click={this.addDigit} />\r\n                <Button label=\"9\" click={this.addDigit} />\r\n                <Button label=\"*\" click={this.setOperation}operation/>\r\n                <Button label=\"4\" click={this.addDigit} />\r\n                <Button label=\"5\" click={this.addDigit} />\r\n                <Button label=\"6\" click={this.addDigit} />\r\n                <Button label=\"-\" click={this.setOperation}operation/>\r\n                <Button label=\"1\" click={this.addDigit} />\r\n                <Button label=\"2\" click={this.addDigit} />\r\n                <Button label=\"3\" click={this.addDigit} />\r\n                <Button label=\"+\" click={this.setOperation}operation/>\r\n                <Button label=\"0\"click={this.addDigit} double/>\r\n                <Button label=\".\" click={this.addDigit}/>\r\n                <Button label=\"=\" click={this.setOperation}operation/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <h1>Calculadora</h1>\n    <Calculator />\n  </div>  \n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}